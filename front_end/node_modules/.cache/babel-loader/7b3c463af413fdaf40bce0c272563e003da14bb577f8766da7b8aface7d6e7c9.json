{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'FindPassword',\n  data() {\n    return {\n      mail_account: '',\n      mail_check: '',\n      // 保存发送验证码的邮箱\n      password: '',\n      password2: '',\n      code: '',\n      code_input: '',\n      validPassword: true,\n      isWaiting: false,\n      // 判断发送验证码按钮是否处于等待状态，false为没有处于等待状态，可点击\n      remainingTime: 60 // 发送验证码后的时间限制，60秒\n    };\n  },\n\n  created() {\n    document.title = '找回密码-chataaa';\n    if (localStorage.getItem('mail_check')) {\n      this.mail_check = localStorage.getItem('mail_check');\n      this.mail_account = this.mail_check;\n    }\n    this.code = localStorage.getItem('code');\n    const endTime = localStorage.getItem('endTime2'); // 获取浏览器存储的发送验证码时间限制的结束时间\n    if (endTime && endTime > Date.now()) {\n      // 还未达到结束时间\n      this.remainingTime = Math.ceil((endTime - Date.now()) / 1000); // 计算还有多少秒\n      this.isWaiting = true;\n      this.startTimer(); // 启动计时器\n    }\n  },\n\n  methods: {\n    checkPassword() {\n      const regex = /^(?=.*[a-zA-Z])(?=.*\\d)(?!.*\\s).{10,12}$/;\n      this.validPassword = regex.test(this.password);\n    },\n    async sendCode() {\n      if (this.mail_account.trim() === '') {\n        alert(`邮箱不能为空`);\n        return;\n      }\n      if (!this.isWaiting) {\n        // 没有处于等待状态\n        const res = await axios.post('http://8.134.178.190:5000/login_system/retrieve_verification_code', {\n          mail_account: this.mail_account\n        });\n        this.mail_check = res.data.mail_account;\n        localStorage.setItem('mail_check', this.mail_account);\n        localStorage.setItem('code', res.data.verification_code);\n        if (res.data.code === '400') {\n          alert('发送验证码失败');\n          return;\n        }\n        if (res.data.code === '401') {\n          alert(`该用户邮箱未注册`);\n          return;\n        }\n        if (res.data.code === '400') {\n          alert(`验证码发送失败，请稍后重试`);\n          return;\n        }\n        this.code = res.data.verification_code;\n        const endTime = Date.now() + 60000; // 60秒后的时间戳\n        localStorage.setItem('endTime2', endTime); // 存入浏览器\n        //启动计时器\n        this.isWaiting = true;\n        this.startTimer();\n      }\n    },\n    startTimer() {\n      const timer = setInterval(() => {\n        if (this.remainingTime > 0) {\n          this.isWaiting = true;\n          this.remainingTime--;\n        } else {\n          this.isWaiting = false;\n          this.remainingTime = 60;\n          localStorage.removeItem('endTime2');\n          clearInterval(timer);\n        }\n      }, 1000);\n    },\n    async chess() {\n      this.checkPassword();\n      if (this.mail_account.trim() === '') {\n        alert('邮箱不能为空');\n        return;\n      }\n      if (this.code_input.trim() === '') {\n        alert('验证码不能为空');\n        return;\n      }\n      if (this.password.trim() === '') {\n        alert(`密码不能为空`);\n        return;\n      }\n      if (this.password2.trim() === '') {\n        alert(`请再次输入确认密码`);\n        return;\n      }\n      if (this.mail_check !== this.mail_account) {\n        alert(`修改密码的邮箱账号必须与获取验证码邮箱一致！`);\n        console.log(this.mail_account);\n        console.log(this.mail_check);\n        return;\n      }\n      if (this.code !== this.code_input) {\n        alert(`验证码有误`);\n        return;\n      } else if (this.validPassword === false) {\n        alert(`输入的密码不符合格式要求`);\n        return;\n      } else if (this.password !== this.password2) {\n        alert(`两次密码输入不一致`);\n        return;\n      }\n      const res = await axios.post('http://8.134.178.190:5000/login_system/retrieve_password', {\n        mail_account: this.mail_account,\n        password: this.password\n      });\n      if (res.data.code === '400') {\n        alert('操作失败');\n        return;\n      }\n      alert(`密码重置成功`);\n      localStorage.removeItem('mail_check');\n      localStorage.removeItem('code');\n      this.mail_check = '';\n      this.$router.push('/login_system');\n    },\n    back() {\n      this.$router.push('/login_system');\n      localStorage.removeItem('mail_check');\n      localStorage.removeItem('code');\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","mail_account","mail_check","password","password2","code","code_input","validPassword","isWaiting","remainingTime","created","document","title","localStorage","getItem","endTime","Date","now","Math","ceil","startTimer","methods","checkPassword","regex","test","sendCode","trim","alert","res","post","setItem","verification_code","timer","setInterval","removeItem","clearInterval","chess","console","log","$router","push","back"],"sources":["src/views/FindPsd.vue"],"sourcesContent":["<template>\r\n  <div class=\"first\">\r\n    <div class=\"second\">\r\n      <img src=\"../assets/login_computer.png\" alt=\"\">\r\n      <h3 class=\"sysName\">欢迎使用<br>ChatAAA</h3>\r\n      <div class=\"text\">\r\n        <h3>重置密码</h3>\r\n        <input v-model=\"mail_account\" type=\"text\" class=\"inp inp1\" placeholder=\"请输入您的邮箱\">\r\n        <input v-model=\"code_input\" type=\"text\" class=\"inp inp2\" placeholder=\"请输入验证码\">\r\n        <button @click=\"sendCode()\"  :disabled=\"isWaiting\" class=\"sendCode\">{{ isWaiting ? `${remainingTime}s` : '发送验证码' }}</button>\r\n        <input v-model=\"password\" type=\"password\" class=\"inp inp3\" placeholder=\"请输入密码10-12位，必须包含字母和数字，不能有空格\">\r\n        <input v-model=\"password2\" type=\"password\" class=\"inp inp4\" placeholder=\"请再次输入密码\">\r\n        <br>\r\n        <button @click=\"chess()\" class=\"chess\">确定</button>\r\n        <br>\r\n        <div class=\"backToLogin\" @click=\"back()\">返回登录</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nexport default {\r\n  name: 'FindPassword',\r\n  data () {\r\n    return {\r\n      mail_account: '',\r\n      mail_check: '', // 保存发送验证码的邮箱\r\n      password:'',\r\n      password2:'',\r\n      code:'',\r\n      code_input:'',\r\n      validPassword: true,\r\n      isWaiting: false, // 判断发送验证码按钮是否处于等待状态，false为没有处于等待状态，可点击\r\n      remainingTime: 60 // 发送验证码后的时间限制，60秒\r\n    }\r\n  },\r\n\r\n  created () {\r\n    document.title = '找回密码-chataaa'\r\n    if (localStorage.getItem('mail_check')) {\r\n      this.mail_check = localStorage.getItem('mail_check')\r\n      this.mail_account = this.mail_check\r\n    }\r\n    this.code = localStorage.getItem('code')\r\n    const endTime = localStorage.getItem('endTime2') // 获取浏览器存储的发送验证码时间限制的结束时间\r\n    if (endTime && endTime > Date.now()) { // 还未达到结束时间\r\n      this.remainingTime = Math.ceil((endTime - Date.now()) / 1000) // 计算还有多少秒\r\n      this.isWaiting = true\r\n      this.startTimer() // 启动计时器\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    checkPassword() {\r\n      const regex = /^(?=.*[a-zA-Z])(?=.*\\d)(?!.*\\s).{10,12}$/;\r\n      this.validPassword = regex.test(this.password);\r\n    },\r\n    async sendCode () {\r\n      if (this.mail_account.trim() === '') {\r\n        alert(`邮箱不能为空`)\r\n        return\r\n      }\r\n      if (!this.isWaiting) { // 没有处于等待状态\r\n        const res = await axios.post('http://8.134.178.190:5000/login_system/retrieve_verification_code', {\r\n          mail_account: this.mail_account,\r\n        })\r\n        this.mail_check = res.data.mail_account\r\n        localStorage.setItem('mail_check', this.mail_account)\r\n        localStorage.setItem('code', res.data.verification_code)\r\n        if (res.data.code === '400') {\r\n          alert('发送验证码失败')\r\n          return\r\n        }\r\n        if (res.data.code === '401') {\r\n          alert(`该用户邮箱未注册`)\r\n          return\r\n        }\r\n        if (res.data.code === '400') {\r\n          alert(`验证码发送失败，请稍后重试`)\r\n          return\r\n        }\r\n        this.code = res.data.verification_code\r\n\r\n        const endTime = Date.now() + 60000 // 60秒后的时间戳\r\n        localStorage.setItem('endTime2', endTime) // 存入浏览器\r\n        //启动计时器\r\n        this.isWaiting = true\r\n        this.startTimer()\r\n      }\r\n    },\r\n    startTimer () {\r\n      const timer = setInterval(() => {\r\n        if (this.remainingTime > 0) {\r\n          this.isWaiting = true\r\n          this.remainingTime--\r\n        } else {\r\n          this.isWaiting = false\r\n          this.remainingTime = 60\r\n          localStorage.removeItem('endTime2')\r\n          clearInterval(timer)\r\n        }\r\n      }, 1000);\r\n    },\r\n    async chess () {\r\n      this.checkPassword()\r\n      if (this.mail_account.trim() === '') {\r\n        alert('邮箱不能为空')\r\n        return\r\n      }\r\n      if (this.code_input.trim() === '') {\r\n        alert('验证码不能为空')\r\n        return\r\n      }\r\n      if (this.password.trim() === '') {\r\n        alert(`密码不能为空`)\r\n        return\r\n      }\r\n      if (this.password2.trim() === '') {\r\n        alert(`请再次输入确认密码`)\r\n        return\r\n      }\r\n      if (this.mail_check !== this.mail_account) {\r\n        alert(`修改密码的邮箱账号必须与获取验证码邮箱一致！`)\r\n        console.log(this.mail_account)\r\n        console.log(this.mail_check)\r\n        return\r\n      }\r\n      if (this.code !== this.code_input) {\r\n        alert(`验证码有误`)\r\n        return\r\n      } else \r\n      if (this.validPassword === false) {\r\n        alert(`输入的密码不符合格式要求`)\r\n        return\r\n      } else if (this.password !== this.password2) {\r\n        alert(`两次密码输入不一致`)\r\n        return\r\n      }\r\n      const res = await axios.post('http://8.134.178.190:5000/login_system/retrieve_password', {\r\n        mail_account: this.mail_account,\r\n        password: this.password\r\n      })\r\n      if (res.data.code === '400') {\r\n          alert('操作失败')\r\n          return\r\n        }\r\n      alert(`密码重置成功`)\r\n      localStorage.removeItem('mail_check')\r\n      localStorage.removeItem('code')\r\n      this.mail_check = ''\r\n      this.$router.push('/login_system')\r\n    },\r\n    back () {\r\n      this.$router.push('/login_system')\r\n      localStorage.removeItem('mail_check')\r\n      localStorage.removeItem('code')\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.first {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 985px;\r\n  background-image: url(../assets/login.jpg);\r\n  background-size: cover;\r\n}\r\n\r\n.first .second {\r\n  width: 1050px;\r\n  height: 500px;\r\n  position: relative;\r\n  display: flex;\r\n}\r\n\r\n.second img {\r\n  border-radius: 10px 0 0 10px;\r\n  width: 600px;\r\n  height: 500px;\r\n  opacity: 0.5;\r\n}\r\n\r\n.second .sysName {\r\n  position: absolute;\r\n  left: 40px;\r\n  top: 50px;\r\n  font-size: 40px;\r\n  color: #fff;\r\n}\r\n\r\n.second .text {\r\n  position: relative;\r\n  width: 450px;\r\n  height: 500px;\r\n  background-color: #fff;\r\n  border-radius: 0 10px 10px 0;\r\n}\r\n\r\n.text h3 {\r\n  text-align: center;\r\n  padding: 40px 40px 70px 40px;\r\n  color: #3A62D7;\r\n  font-size: 30px;\r\n}\r\n\r\n.second .text .inp {\r\n  display: inline-block;\r\n  position: absolute;\r\n  width: 340px;\r\n  height: 30px;\r\n  margin: 50px;\r\n  padding: 5px;\r\n  border: none;\r\n  border-bottom: 1px solid #DCDCDC;\r\n}\r\n\r\n.inp:focus {\r\n  outline: none;\r\n}\r\n\r\n.inp1 {\r\n  position: absolute;\r\n  left: 20px;\r\n  top: 100px;\r\n}\r\n\r\n.inp2 {\r\n  position: absolute;\r\n  left: 20px;\r\n  top: 145px;\r\n}\r\n\r\n.inp3 {\r\n  position: absolute;\r\n  left: 20px;\r\n  top: 190px;\r\n}\r\n\r\n.inp4 {\r\n  position: absolute;\r\n  left: 20px;\r\n  top: 235px;\r\n}\r\n\r\n.sendCode {\r\n  position: absolute;\r\n  width: 90px;\r\n  height: 35px;\r\n  background-color: #1990FF;\r\n  color: #fff;\r\n  font-size: 12px;\r\n  border-radius: 30px;\r\n  text-align: center;\r\n  line-height: 35px;\r\n  top: 190px;\r\n  right: 40px;\r\n  cursor: pointer;\r\n}\r\n\r\n.sendCode:hover {\r\n  width: 93px;\r\n  height: 37px;\r\n  text-align: center;\r\n  line-height: 37px;\r\n  opacity: 0.7;\r\n  transition: 0.2s;\r\n}\r\n\r\n.text .forget {\r\n  position: absolute;\r\n  right: 80px;\r\n  top: 300px;\r\n  font-size: 12px;\r\n  color: #3A62D7;\r\n  font-weight: 700;\r\n  cursor: pointer;\r\n}\r\n\r\n.text .chess {\r\n  position: absolute;\r\n  display: block;\r\n  width: 340px;\r\n  height: 45px;\r\n  background-color: #3A62D7;\r\n  text-align: center;\r\n  line-height: 45px;\r\n  color: #fff;\r\n  font-size: 16px;\r\n  margin: 0 auto;\r\n  top: 350px;\r\n  left: 55px;\r\n  cursor: pointer;\r\n}\r\n\r\n.text .chess:hover {\r\n  border-radius: 10px;\r\n  width: 345px;\r\n  height: 50px;\r\n  text-align: center;\r\n  line-height: 50px;\r\n  opacity: 0.7;\r\n  transition: 0.2s;\r\n}\r\n\r\n.text .backToLogin {\r\n  position: absolute;\r\n  display: block;\r\n  width: 340px;\r\n  height: 45px;\r\n  background-color: #3A62D7;\r\n  text-align: center;\r\n  line-height: 45px;\r\n  color: #fff;\r\n  font-size: 16px;\r\n  margin: 0 auto;\r\n  top: 420px;\r\n  left: 55px;\r\n  cursor: pointer;\r\n}\r\n\r\n.text .backToLogin:hover {\r\n  border-radius: 10px;\r\n  width: 345px;\r\n  height: 50px;\r\n  text-align: center;\r\n  line-height: 50px;\r\n  opacity: 0.7;\r\n  transition: 0.2s;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}