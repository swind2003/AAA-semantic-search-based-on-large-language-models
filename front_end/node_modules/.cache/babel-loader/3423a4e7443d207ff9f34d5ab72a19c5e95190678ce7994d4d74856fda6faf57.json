{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'ChatInterface',\n  data() {\n    return {\n      llm_type: '0',\n      user_id: this.$route.query.user_id,\n      role_id: '1',\n      flag: '',\n      // 标识模型\n      question: '',\n      isClickable: true,\n      // 是否处于可发送聊天状态\n      groups: [],\n      // 分组\n      windows: [],\n      // 窗口\n      role_list: [],\n      // 模型数组\n      messages: [1],\n      // 聊天消息\n      newGroup: false,\n      // 显示新建分组窗口命名\n      group_name: '',\n      // 新建分组名称\n      group_id: '',\n      // 当前选中分组的id号\n      chat_window_id: '',\n      // 当前选中的窗口的id号\n      newGroupName: '',\n      // 重命名的分组名\n      newWindowName: '',\n      // 重命名的窗口名\n      changeGroup: false,\n      // 是否显示转移分组列表\n      contactUs: '12345678910@qq.com',\n      //联系我们内容\n      userMustKnow: '用户须知',\n      // 用户须知内容\n      isShowContact: false,\n      // true展示联系我们内容\n      isShowKnow: false,\n      // true展示用户须知内容\n      advertise_state: true,\n      // false显示广告\n      advertisementPicture: null // 广告图片\n    };\n  },\n\n  created() {\n    this.getInfo();\n  },\n  mounted() {\n    if (this.role_list.length > 0) {\n      this.llm_type = this.role_list[0].role_id;\n    }\n  },\n  methods: {\n    huadong() {\n      this.$nextTick(() => {\n        const myDiv = this.$refs.myDiv;\n        myDiv.scrollTop = myDiv.scrollHeight;\n      });\n    },\n    async getInfo() {\n      const res1 = await axios.get('http://119.39.26.68:5000/user/chat/get_all_group', {\n        params: {\n          user_id: this.user_id\n        }\n      });\n      console.log(res1);\n      this.groups = res1.data.data;\n      const res2 = await axios.get('http://119.39.26.68:5000/user/chat/get_all_window', {\n        params: {\n          user_id: this.user_id\n        }\n      });\n      console.log(res2);\n      this.windows = res2.data.data;\n      const res3 = await axios.get('http://119.39.26.68:5000/administrator/get_company_info');\n      console.log(res3);\n      this.contactUs = res3.data.data.contact_way;\n      this.userMustKnow = res3.data.data.user_agreement;\n      const res4 = await axios.get('http://119.39.26.68:5000/user/get_advertising', {\n        params: {},\n        responseType: 'blob'\n      });\n      console.log(res4.data);\n      const imgUrl = URL.createObjectURL(res4.data);\n      this.advertisementPicture = imgUrl;\n      const res5 = await axios.get('http://119.39.26.68:5000/user/chat/get_all_role', {\n        params: {\n          user_id: this.user_id\n        }\n      });\n      this.role_list = res5.data.data;\n      console.log(this.role_list[0].role_id);\n      this.flag = this.role_list[0].flag;\n      this.role_id = this.role_list[0].role_id;\n      this.llm_type = this.role_list[0].llm_type;\n      console.log(res5);\n      const res6 = await axios.get('http://119.39.26.68:5000/user/get_advertise_state', {\n        params: {\n          user_id: this.user_id\n        }\n      });\n      this.advertise_state = res6.data.advertise_state;\n    },\n    contact() {\n      this.isShowContact = true;\n    },\n    closeContact() {\n      this.isShowContact = false;\n    },\n    mustKnow() {\n      this.isShowKnow = true;\n    },\n    closeMustKnow() {\n      this.isShowKnow = false;\n    },\n    async exit() {\n      const res = await axios.post('http://119.39.26.68:5000/login_system/log_out', {\n        user_id: this.user_id\n      });\n      console.log(res);\n      this.$router.push('/login_system');\n    },\n    showWindows(groups, index) {\n      this.isDown = !this.isDown;\n      this.isUp = !this.isUp;\n      if (groups[index].judge === 'true') {\n        groups[index].judge = 'false';\n      } else {\n        groups[index].judge = 'true';\n      }\n    },\n    changeGroupName(groups, index) {\n      // 点击分组重命名\n      groups[index].change_group_name1 = 'false';\n      groups[index].change_group_name2 = 'true';\n    },\n    async chessRenameG() {\n      // 重命名分组\n      if (this.newGroupName === '') {\n        alert(`名称不能为空`);\n        return;\n      }\n      const res = await axios.post('http://119.39.26.68:5000/user/chat/rename_group', {\n        group_id: this.group_id,\n        group_name: this.newGroupName\n      });\n      this.newGroupName = '';\n      console.log(res);\n      this.getInfo();\n    },\n    noRenameG(groups, index) {\n      // 取消重命名分组\n      groups[index].change_group_name1 = 'true';\n      groups[index].change_group_name2 = 'false';\n    },\n    async delG(group_id) {\n      // 删除分组\n      const res = await axios.delete(`http://119.39.26.68:5000/user/chat/delete_group?group_id=${group_id}`);\n      console.log(res);\n      this.getInfo();\n    },\n    changeWindowName(windows, index) {\n      // 点击窗口重命名\n      windows[index].change_window_name1 = 'false';\n      windows[index].change_window_name2 = 'true';\n    },\n    async chessRenameW() {\n      // 重命名窗口\n      if (this.newWindowName === '') {\n        alert(`名称不能为空`);\n        return;\n      }\n      const res = await axios.post('http://119.39.26.68:5000/user/chat/rename_window', {\n        chat_window_id: this.chat_window_id,\n        chat_window_name: this.newWindowName\n      });\n      this.newWindowName = '';\n      console.log(res);\n      this.getInfo();\n    },\n    noRenameW(windows, index) {\n      // 取消重命名窗口\n      windows[index].change_window_name1 = 'true';\n      windows[index].change_window_name2 = 'false';\n    },\n    changeG(windows, index) {\n      // 显示转移窗口的分组列表\n      this.chat_window_id = windows[index].chat_window_id;\n      this.changeGroup = true;\n    },\n    async chessChange(group_id) {\n      // 确实转移\n      const res = await axios.post('http://119.39.26.68:5000/user/chat/group_add_window', {\n        chat_window_id: this.chat_window_id,\n        group_id: group_id\n      });\n      console.log(res);\n      this.getInfo();\n    },\n    close() {\n      // 关闭转移窗口的分组列表\n      this.changeGroup = false;\n    },\n    async delW(chat_window_id) {\n      // 删除窗口\n      const res = await axios.delete(`http://119.39.26.68:5000/user/chat/delete_window?chat_window_id=${chat_window_id}`);\n      console.log(res);\n      this.getInfo();\n    },\n    async displayWindow(chat_window_id) {\n      // 点击窗口显示对应聊天页面及其聊天记录\n      const res = await axios.get('http://119.39.26.68:5000/user/chat/get_recorder', {\n        params: {\n          chat_window_id: chat_window_id\n        }\n      });\n      console.log(res);\n      this.messages = res.data.data;\n      this.huadong();\n    },\n    clickNewGroup() {\n      // 点击新建分组\n      this.newGroup = true;\n    },\n    async createGroup() {\n      // 确定新建分组\n      const res = await axios.post('http://119.39.26.68:5000/user/chat/new_group', {\n        user_id: this.user_id,\n        group_name: this.group_name\n      });\n      this.newGroup = false;\n      console.log(res);\n      this.group_id = res.data.group_id;\n      this.getInfo();\n    },\n    cancel() {\n      // 取消新建分组\n      this.newGroup = false;\n    },\n    async clickNewChat() {\n      // 新建窗口\n      if (this.group_id === '') {\n        alert(`请选中分组后再创建窗口`);\n        return;\n      }\n      const res = await axios.post('http://119.39.26.68:5000/user/chat/new_chat', {\n        user_id: this.user_id,\n        group_id: this.group_id\n      });\n      if (res.data.code === '401') {\n        alert(`创建失败，请重新创建`);\n      }\n      console.log(res);\n      this.chat_window_id = res.data.chat_window_id;\n      this.getInfo();\n    },\n    chooseGroup(group_id) {\n      // 获取当前选中分组id号\n      this.group_id = group_id;\n    },\n    chooseWindow(group_id, chat_window_id) {\n      // 获取当前选中窗口id号\n      this.group_id = group_id;\n      this.chat_window_id = chat_window_id;\n    },\n    async sendQuestion() {\n      // 发送问题\n      if (this.question.trim() === '') {\n        alert(`输入内容不能为空`);\n        return;\n      }\n      this.isClickable = false;\n      const res = await axios.post('http://119.39.26.68:5000/semantic_search/query', {\n        llm_type: this.llm_type,\n        user_id: this.user_id,\n        chat_window_id: this.chat_window_id,\n        role_id: this.role_id,\n        question: this.question\n      });\n      this.question = '';\n      console.log(res);\n      this.displayWindow(this.chat_window_id);\n      this.isClickable = true;\n      if (res.data.code === '403') {\n        alert(`提问次数已达上限`);\n      }\n    },\n    closeAdv() {\n      this.advertise_state = true;\n    },\n    createRoles() {\n      this.$router.push({\n        path: '/createRoles',\n        query: {\n          user_id: this.user_id\n        }\n      });\n    },\n    setting() {\n      this.$router.push({\n        path: '/setting',\n        query: {\n          user_id: this.user_id\n        }\n      });\n    }\n  },\n  watch: {\n    flag(newVal) {\n      const role = this.role_list.find(item => item.flag === newVal);\n      if (role) {\n        this.role_id = role.role_id;\n        this.llm_type = role.llm_type;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","llm_type","user_id","$route","query","role_id","flag","question","isClickable","groups","windows","role_list","messages","newGroup","group_name","group_id","chat_window_id","newGroupName","newWindowName","changeGroup","contactUs","userMustKnow","isShowContact","isShowKnow","advertise_state","advertisementPicture","created","getInfo","mounted","length","methods","huadong","$nextTick","myDiv","$refs","scrollTop","scrollHeight","res1","get","params","console","log","res2","res3","contact_way","user_agreement","res4","responseType","imgUrl","URL","createObjectURL","res5","res6","contact","closeContact","mustKnow","closeMustKnow","exit","res","post","$router","push","showWindows","index","isDown","isUp","judge","changeGroupName","change_group_name1","change_group_name2","chessRenameG","alert","noRenameG","delG","delete","changeWindowName","change_window_name1","change_window_name2","chessRenameW","chat_window_name","noRenameW","changeG","chessChange","close","delW","displayWindow","clickNewGroup","createGroup","cancel","clickNewChat","code","chooseGroup","chooseWindow","sendQuestion","trim","closeAdv","createRoles","path","setting","watch","newVal","role","find","item"],"sources":["src/views/ChatInterface.vue"],"sourcesContent":["<template>\r\n  <div class=\"wrapped\">\r\n    <div class=\"left\">\r\n      <ul class=\"leftText\">\r\n        <li class=\"one\">聊天框</li>\r\n        <li class=\"two\">角色管理</li>\r\n        <li @click=\"createRoles()\" class=\"three\">新建角色</li>\r\n        <li @click=\"setting()\" class=\"four\">设置</li>\r\n        <li class=\"five\" @click=\"exit()\">退出登录</li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"middle\">\r\n      <div class=\"middleTop\">\r\n        <button @click=\"clickNewGroup()\" class=\"newGroup\">+ New Group</button> <button @click=\"clickNewChat()\" class=\"newChat\">+ New Chat</button>\r\n      </div>\r\n      <ul v-for=\"(group,index) in groups\" :key=\"group.group_id\" class=\"middleMain\" :class=\"{middleMainMarginTop: index == 0}\">\r\n        <li @click=\"chooseGroup(group.group_id)\" class=\"groupName\" :class=\"{groupBorder: group.group_id === group_id}\">\r\n          <div class=\"name\">\r\n            <input v-model=\"group.group_name\" type=\"text\" disabled v-show=\"group.change_group_name1 === 'true'\">\r\n            <input v-model=\"newGroupName\" class=\"getBorder\" type=\"text\" name=\"\" id=\"\" v-show=\"group.change_group_name2 === 'true'\">\r\n            <div @click=\"chessRenameG()\" class=\"yes\" v-show=\"group.change_group_name2 === 'true'\">√</div>\r\n            <div @click=\"noRenameG(groups, index)\" class=\"no\" v-show=\"group.change_group_name2 === 'true'\">×</div>\r\n            <!-- <div>{{ group.group_name }}</div> -->\r\n            <div @click=\"showWindows(groups, index)\" class=\"iconfont icon-xiangxia\"></div>\r\n          </div>\r\n          <div class=\"icon\">\r\n            <div @click=\"changeGroupName(groups, index)\" class=\"iconfont icon-bianxie\"></div>\r\n            <div @click=\"delG(group.group_id)\" class=\"iconfont icon-shanchu\"></div>\r\n          </div>\r\n        </li>\r\n        <ul>\r\n          <li @click=\"displayWindow(window.chat_window_id)\" v-for=\"(window, index) in windows\" :key=\"window.chat_window_id\" class=\"chatName\" v-show=\"group.group_id === window.group_id && group.judge === 'true'\" :class=\"{chatBorder: window.chat_window_id === chat_window_id}\">\r\n            <div @click=\"chooseWindow(window.group_id, window.chat_window_id)\" class=\"name\">\r\n              <div class=\"iconfont icon-duihua\"></div>\r\n              <input v-model=\"window.chat_window_name\" type=\"text\" disabled v-show=\"window.change_window_name1 === 'true'\">\r\n              <input v-model=\"newWindowName\" class=\"getBorder\" type=\"text\" name=\"\" id=\"\" v-show=\"window.change_window_name2 === 'true'\">\r\n              <div @click=\"chessRenameW()\" class=\"yes\" v-show=\"window.change_window_name2 === 'true'\">√</div>\r\n              <div @click=\"noRenameW(windows, index)\" class=\"no\" v-show=\"window.change_window_name2 === 'true'\">×</div>\r\n            </div>\r\n            <div class=\"icon\">\r\n              <div @click=\"changeWindowName(windows, index)\" class=\"iconfont icon-bianxie\"></div>\r\n              <div @click=\"changeG(windows, index)\" class=\"iconfont icon-zhuanyi\"></div>\r\n              <div @click=\"delW(window.chat_window_id)\" class=\"iconfont icon-shanchu\"></div>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </ul>\r\n    </div>\r\n    <div class=\"right\">\r\n      <div class=\"rightTop\">\r\n        <span>聊天模型选择:</span>\r\n        <select v-model=\"flag\" name=\"\" id=\"\">\r\n          <option v-for=\"item in role_list\" :key=\"item.role_id\" :value=\"item.flag\">{{ item.role_name }}</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"rightMiddle\" ref=\"myDiv\">\r\n        <div class=\"container\">\r\n          <div class=\"message\"  v-for=\"(message,index) in messages\" :key=\"index\">{{ message.content }}</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"contactUsShow\" v-show=\"isShowContact\">\r\n        <div @click=\"closeContact()\" class=\"close\">❎</div>\r\n        <div class=\"contactTitle\">联系我们</div>\r\n        <div class=\"contactContent\">{{ contactUs }}</div>\r\n      </div>\r\n      <div class=\"userMustKnowShow\" v-show=\"isShowKnow\">\r\n        <div @click=\"closeMustKnow()\" class=\"close\">❎</div>\r\n        <div class=\"userKnowtTitle\">《用户须知》</div>\r\n        <div class=\"userKnowContent\">{{ userMustKnow }}</div>\r\n      </div>\r\n      <div class=\"rightBottom\" v-show=\"chat_window_id !== ''\">\r\n        <textarea v-model=\"question\" name=\"\" id=\"\" cols=\"30\" rows=\"10\" placeholder=\"点击输入\"></textarea>\r\n        <div @click=\"sendQuestion()\" :class=\"{ 'disable': !isClickable }\" class=\"iconfont icon-fasong\"></div>\r\n      </div>\r\n      <div class=\"information\">\r\n        <div @click=\"contact()\" class=\"contactUs\">联系我们</div>\r\n        <div @click=\"mustKnow()\" class=\"userMustKnow\">《用户须知》</div>\r\n      </div>\r\n      <div v-show=\"newGroup\" class=\"overlay\">\r\n        <div class=\"setGroupName\">\r\n          <div>请输入分组名称</div>\r\n          <input v-model=\"group_name\" type=\"text\">\r\n          <br>\r\n          <div class=\"chessCancel\">\r\n            <button @click=\"createGroup()\">确定</button> <button @click=\"cancel()\">取消</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div v-show=\"!advertise_state\" class=\"advertisement\">\r\n      <img :src=\"advertisementPicture\" alt=\"\">\r\n      <div @click=\"closeAdv()\" class=\"closeAdv\">❎</div>\r\n    </div>\r\n    <div v-show=\"changeGroup\">\r\n      <div class=\"changeTop\">请选择您要移动到的分组</div>\r\n      <div @click=\"close()\" class=\"close\">❎</div>\r\n      <div class=\"changeGroup\">\r\n        <div @click=\"chessChange(group.group_id)\" v-for=\"(group) in groups\" :key=\"group.group_id\" class=\"group\">{{ group.group_name }}</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nexport default {\r\n  name: 'ChatInterface',\r\n  data () {\r\n    return {\r\n      llm_type: '0',\r\n      user_id: this.$route.query.user_id,\r\n      role_id: '1',\r\n      flag: '', // 标识模型\r\n      question: '',\r\n      isClickable: true, // 是否处于可发送聊天状态\r\n      groups: [], // 分组\r\n      windows: [], // 窗口\r\n      role_list: [], // 模型数组\r\n      messages: [1], // 聊天消息\r\n      newGroup:false, // 显示新建分组窗口命名\r\n      group_name: '', // 新建分组名称\r\n      group_id: '', // 当前选中分组的id号\r\n      chat_window_id: '', // 当前选中的窗口的id号\r\n      newGroupName: '', // 重命名的分组名\r\n      newWindowName: '', // 重命名的窗口名\r\n      changeGroup: false, // 是否显示转移分组列表\r\n      contactUs: '12345678910@qq.com', //联系我们内容\r\n      userMustKnow: '用户须知', // 用户须知内容\r\n      isShowContact: false, // true展示联系我们内容\r\n      isShowKnow: false, // true展示用户须知内容\r\n      advertise_state: true, // false显示广告\r\n      advertisementPicture: null, // 广告图片\r\n    }\r\n  },\r\n\r\n  created () {\r\n    this.getInfo()\r\n  },\r\n\r\n  mounted () {\r\n    if (this.role_list.length > 0) {\r\n      this.llm_type = this.role_list[0].role_id\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    huadong () {\r\n      this.$nextTick(() => {\r\n      const myDiv = this.$refs.myDiv;\r\n      myDiv.scrollTop = myDiv.scrollHeight;\r\n      })\r\n    },\r\n    async getInfo () {\r\n      const res1 = await axios.get('http://119.39.26.68:5000/user/chat/get_all_group', {\r\n      params: {\r\n        user_id: this.user_id\r\n      }\r\n    })\r\n      console.log(res1)\r\n      this.groups = res1.data.data\r\n\r\n      const res2 = await axios.get('http://119.39.26.68:5000/user/chat/get_all_window', {\r\n        params: {\r\n          user_id: this.user_id\r\n        }\r\n      })\r\n      console.log(res2)\r\n      this.windows = res2.data.data\r\n\r\n      const res3 = await axios.get('http://119.39.26.68:5000/administrator/get_company_info')\r\n      console.log(res3)\r\n      this.contactUs = res3.data.data.contact_way\r\n      this.userMustKnow = res3.data.data.user_agreement\r\n\r\n      const res4 = await axios.get('http://119.39.26.68:5000/user/get_advertising', {\r\n        params: {\r\n\r\n        },\r\n        responseType: 'blob'\r\n      })\r\n      console.log(res4.data)\r\n      const imgUrl = URL.createObjectURL(res4.data)\r\n      this.advertisementPicture = imgUrl\r\n\r\n      const res5 = await axios.get('http://119.39.26.68:5000/user/chat/get_all_role', {\r\n        params: {\r\n          user_id: this.user_id\r\n        }\r\n      })\r\n      this.role_list = res5.data.data\r\n      console.log(this.role_list[0].role_id)\r\n      this.flag = this.role_list[0].flag\r\n      this.role_id = this.role_list[0].role_id\r\n      this.llm_type = this.role_list[0].llm_type\r\n      console.log(res5)\r\n\r\n      const res6 = await axios.get('http://119.39.26.68:5000/user/get_advertise_state', {\r\n        params: {\r\n          user_id: this.user_id\r\n        }\r\n      })\r\n      this.advertise_state = res6.data.advertise_state\r\n    },\r\n    contact () {\r\n      this.isShowContact = true\r\n    },\r\n    closeContact () {\r\n      this.isShowContact = false\r\n    },\r\n    mustKnow () {\r\n      this.isShowKnow = true\r\n    },\r\n    closeMustKnow () {\r\n      this.isShowKnow = false\r\n    },\r\n    async exit () {\r\n      const res = await axios.post('http://119.39.26.68:5000/login_system/log_out', {\r\n        user_id: this.user_id\r\n      })\r\n      console.log(res)\r\n      this.$router.push('/login_system')\r\n    },\r\n    showWindows (groups, index) {\r\n      this.isDown = !this.isDown\r\n      this.isUp = !this.isUp\r\n      if (groups[index].judge === 'true') {\r\n        groups[index].judge = 'false'\r\n      } else {\r\n        groups[index].judge = 'true'\r\n      }\r\n    },\r\n    changeGroupName (groups, index) { // 点击分组重命名\r\n      groups[index].change_group_name1 = 'false'\r\n      groups[index].change_group_name2 = 'true'\r\n    },\r\n    async chessRenameG () { // 重命名分组\r\n      if (this.newGroupName === '') {\r\n        alert(`名称不能为空`)\r\n        return\r\n      }\r\n      const res = await axios.post('http://119.39.26.68:5000/user/chat/rename_group', {\r\n        group_id: this.group_id,\r\n        group_name: this.newGroupName\r\n      })\r\n      this.newGroupName = ''\r\n      console.log(res)\r\n      this.getInfo()\r\n    },\r\n    noRenameG (groups, index) { // 取消重命名分组\r\n      groups[index].change_group_name1 = 'true'\r\n      groups[index].change_group_name2 = 'false'\r\n    },\r\n    async delG(group_id) { // 删除分组\r\n      const res = await axios.delete(`http://119.39.26.68:5000/user/chat/delete_group?group_id=${group_id}`)\r\n      console.log(res)\r\n      this.getInfo()\r\n    },\r\n    changeWindowName (windows, index) { // 点击窗口重命名\r\n      windows[index].change_window_name1 = 'false'\r\n      windows[index].change_window_name2 = 'true'\r\n    },\r\n    async chessRenameW () { // 重命名窗口\r\n      if (this.newWindowName === '') {\r\n        alert(`名称不能为空`)\r\n        return\r\n      }\r\n      const res = await axios.post('http://119.39.26.68:5000/user/chat/rename_window', {\r\n        chat_window_id: this.chat_window_id,\r\n        chat_window_name: this.newWindowName\r\n      })\r\n      this.newWindowName = ''\r\n      console.log(res)\r\n      this.getInfo()\r\n    },\r\n    noRenameW (windows, index) { // 取消重命名窗口\r\n      windows[index].change_window_name1 = 'true'\r\n      windows[index].change_window_name2 = 'false'\r\n    },\r\n    changeG (windows, index) { // 显示转移窗口的分组列表\r\n      this.chat_window_id = windows[index].chat_window_id\r\n      this.changeGroup = true\r\n    },\r\n    async chessChange (group_id) { // 确实转移\r\n      const res = await axios.post('http://119.39.26.68:5000/user/chat/group_add_window', {\r\n        chat_window_id: this.chat_window_id,\r\n        group_id: group_id\r\n      })\r\n      console.log(res)\r\n      this.getInfo()\r\n    },\r\n    close () { // 关闭转移窗口的分组列表\r\n      this.changeGroup = false\r\n    },\r\n    async delW(chat_window_id) { // 删除窗口\r\n      const res = await axios.delete(`http://119.39.26.68:5000/user/chat/delete_window?chat_window_id=${chat_window_id}`)\r\n      console.log(res)\r\n      this.getInfo()\r\n    },\r\n    async displayWindow (chat_window_id) { // 点击窗口显示对应聊天页面及其聊天记录\r\n      const res = await axios.get('http://119.39.26.68:5000/user/chat/get_recorder', {\r\n        params: {\r\n          chat_window_id: chat_window_id\r\n        }\r\n      })\r\n      console.log(res)\r\n      this.messages = res.data.data\r\n      this.huadong()\r\n    },\r\n    clickNewGroup () { // 点击新建分组\r\n      this.newGroup = true\r\n    },\r\n    async createGroup () { // 确定新建分组\r\n      const res = await axios.post('http://119.39.26.68:5000/user/chat/new_group', {\r\n        user_id: this.user_id,\r\n        group_name: this.group_name\r\n      })\r\n      this.newGroup = false\r\n      console.log(res)\r\n      this.group_id = res.data.group_id\r\n      this.getInfo()\r\n    },\r\n    cancel () { // 取消新建分组\r\n      this.newGroup = false\r\n    },\r\n    async clickNewChat () { // 新建窗口\r\n      if (this.group_id === '') {\r\n        alert(`请选中分组后再创建窗口`)\r\n        return\r\n      }\r\n      const res = await axios.post('http://119.39.26.68:5000/user/chat/new_chat', {\r\n        user_id: this.user_id,\r\n        group_id: this.group_id\r\n      })\r\n      if (res.data.code === '401') {\r\n        alert(`创建失败，请重新创建`)\r\n      }\r\n      console.log(res)\r\n      this.chat_window_id = res.data.chat_window_id\r\n      this.getInfo()\r\n    },\r\n    chooseGroup (group_id) { // 获取当前选中分组id号\r\n      this.group_id = group_id\r\n    },\r\n    chooseWindow (group_id, chat_window_id) { // 获取当前选中窗口id号\r\n      this.group_id = group_id\r\n      this.chat_window_id = chat_window_id\r\n    },\r\n    async sendQuestion () { // 发送问题\r\n      if (this.question.trim() === '') {\r\n        alert(`输入内容不能为空`)\r\n        return\r\n      }\r\n      this.isClickable = false\r\n      const res = await axios.post('http://119.39.26.68:5000/semantic_search/query', {\r\n        llm_type: this.llm_type,\r\n        user_id: this.user_id,\r\n        chat_window_id: this.chat_window_id,\r\n        role_id: this.role_id,\r\n        question: this.question\r\n      })\r\n      this.question = ''\r\n      console.log(res)\r\n      this.displayWindow(this.chat_window_id)\r\n      this.isClickable = true\r\n      if (res.data.code === '403') {\r\n        alert(`提问次数已达上限`)\r\n      }\r\n    },\r\n    closeAdv () {\r\n      this.advertise_state = true\r\n    },\r\n    createRoles () {\r\n      this.$router.push({\r\n        path: '/createRoles',\r\n        query: {\r\n          user_id: this.user_id\r\n        }\r\n      })\r\n    },\r\n    setting () {\r\n      this.$router.push({\r\n        path: '/setting',\r\n        query: {\r\n          user_id: this.user_id\r\n        }\r\n      })\r\n    }\r\n  },\r\n\r\n  watch: {\r\n    flag(newVal) {\r\n      const role = this.role_list.find(item => item.flag === newVal)\r\n      if (role) {\r\n        this.role_id = role.role_id\r\n        this.llm_type = role.llm_type\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n  .wrapped {\r\n    display: flex;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #465069;\r\n    opacity: 0.9;\r\n  }\r\n\r\n  .left {\r\n    width: 90px;\r\n    height: 100%;\r\n    background-color: #D6ECFF;\r\n    border-radius: 10px 0 0 10px;\r\n  }\r\n\r\n  .leftText {\r\n    position: relative;\r\n    color: #9CBFFB;\r\n    font-weight: 700;\r\n    font-size: 18px;\r\n    text-align: center;\r\n  }\r\n\r\n  .leftText li {\r\n    width: 90px;\r\n    height: 50px;\r\n    line-height: 50px;\r\n    border: 2px solid #9CBFFB;\r\n    border-radius: 10px;\r\n  }\r\n\r\n  .leftText li:hover {\r\n    background-color: #a0bff5;\r\n    color: #1990FF;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .leftText .one {\r\n    position: absolute;\r\n    top: 90px;\r\n    color: #1990FF;\r\n  }\r\n\r\n  .leftText .two {\r\n    position: absolute;\r\n    top: 210px;\r\n  }\r\n\r\n  .leftText .three {\r\n    position: absolute;\r\n    top: 330px;\r\n  }\r\n\r\n  .leftText .four {\r\n    position: absolute;\r\n    top: 450px;\r\n  }\r\n\r\n  .leftText .five {\r\n    position: absolute;\r\n    top: 570px;\r\n  }\r\n\r\n  .middle {\r\n    position: relative;\r\n    width: 350px;\r\n    background-color: #F6FBFF;\r\n    border: 1px solid #BBBBBB;\r\n    overflow: auto;\r\n  }\r\n\r\n  .middle .middleTop {\r\n    position: fixed;\r\n    width: 345px;\r\n    height: 60px;\r\n    padding: 10px;\r\n    background-color: #F6FBFF;\r\n    border: 1px solid #4095E5;\r\n    font-size: 17px;\r\n    z-index: 999;\r\n  }\r\n\r\n  .middleTop .newGroup {\r\n    width: 100px;\r\n    height: 40px;\r\n    background-color: #F6FBFF;\r\n    border: 1px solid #4095E5;\r\n    border-radius: 5px;\r\n    margin-left: 45px;\r\n    margin-right: 30px;\r\n  }\r\n\r\n  .middleTop .newChat {\r\n    width: 100px;\r\n    height: 40px;\r\n    background-color: #F6FBFF;\r\n    border: 1px solid #4095E5;\r\n    border-radius: 5px;\r\n  }\r\n\r\n  .middle .newGroup:hover {\r\n    opacity: 0.7;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .middle .newChat:hover {\r\n    opacity: 0.7;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .middleMain {\r\n    /* margin-top: 60px; */  /* v-bind另起一个选择器\r\n    第一个分组才有，其他分组不用加上外边距 */\r\n    /* margin-top: 60px; */\r\n    font-size: 15px;\r\n  }\r\n\r\n  .middleMainMarginTop {\r\n    margin-top: 60px;\r\n  }\r\n\r\n  .middleMain .groupName {\r\n    position: relative;\r\n    display: flex;\r\n    width: 345px;\r\n    height: 40px;\r\n    justify-content: center;\r\n  }\r\n\r\n  .middleMain .groupName:hover {\r\n    border: 1px solid #4095E5;\r\n  }\r\n\r\n  .middleMain .groupBorder {\r\n    border: 1px solid #4095E5;\r\n  }\r\n\r\n  .groupName .name {\r\n    display: flex;\r\n    padding-right: 30px;\r\n    align-items: center;\r\n  }\r\n\r\n  .groupName .name div {\r\n    cursor: pointer;\r\n  }\r\n\r\n  .groupName .icon {\r\n    display: flex;\r\n    position: absolute;\r\n    top: 3px;\r\n    right: 10px;\r\n  }\r\n\r\n  .groupName .icon-xiangxia, .icon-icon_on_the_top, .icon-bianxie, .icon-shanchu {\r\n    color: #000;\r\n    font-size: 20px;\r\n    padding-right: 10px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .middleMain .chatName {\r\n    position: relative;\r\n    display: flex;\r\n    width: 345px;\r\n    height: 40px;\r\n    justify-content: left;\r\n  }\r\n\r\n  .middleMain .chatName:hover {\r\n    border: 1px solid #4095E5;\r\n  }\r\n\r\n  .middleMain .chatBorder {\r\n    border: 1px solid #4095E5;\r\n  }\r\n\r\n  .chatName .name {\r\n    display: flex;\r\n    padding-left: 10px;\r\n    align-items: center;\r\n  }\r\n\r\n  .chatName .icon {\r\n    display: flex;\r\n    position: absolute;\r\n    top: 3px;\r\n    right: 10px;\r\n  }\r\n\r\n  .chatName .icon-bianxie, .icon-zhuanyi, .icon-shanchu{\r\n    color: #000;\r\n    font-size: 20px;\r\n    padding-right: 10px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .middle input {\r\n    width: 150px;\r\n    height: 26px;\r\n    border: none;\r\n    padding: 5px;\r\n    background-color: #F6FBFF;\r\n    font-size: 16px;\r\n    font-weight: 700;\r\n    margin-right: 5px;\r\n  }\r\n\r\n  .middle .getBorder {\r\n    border: 1px solid #000;\r\n  }\r\n\r\n  .name .yes {\r\n    width: 26px;\r\n    height: 26px;\r\n    text-align: center;\r\n    line-height: 26px;\r\n    border: 1px solid #BBBBBB;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .name .no {\r\n    width: 26px;\r\n    height: 26px;\r\n    text-align: center;\r\n    line-height: 26px;\r\n    border: 1px solid #BBBBBB;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .right {\r\n    position: relative;\r\n    width: 1100px;\r\n    background-color: #F2F5F8;\r\n  }\r\n\r\n  .rightTop {\r\n    position: relative;\r\n    width: 1100px;\r\n    height: 50px;\r\n    border-bottom: 1px solid #BBBBBB;\r\n  }\r\n\r\n  .rightTop span {\r\n    position: absolute;\r\n    left: 390px;\r\n    top: 13px;\r\n    font-size: 16px;\r\n    font-weight: 700;\r\n    /* color: #309bff; */\r\n  }\r\n\r\n  .rightTop select {\r\n    position: absolute;\r\n    width: 150px;\r\n    height: 36px;\r\n    left: 500px;\r\n    top: 7px;\r\n    background-color: skyblue;\r\n    text-align: center;\r\n    transition: background-color 0.3s ease;\r\n    opacity: 0.7;\r\n  }\r\n\r\n  .rightTop select:hover {\r\n    background-color: #D6ECFF;\r\n    opacity: 1;\r\n  }\r\n\r\n  .right .rightMiddle {\r\n    overflow: auto;\r\n    position: absolute;\r\n    width: 1040px;\r\n    height: 550px;\r\n    left: 30px;\r\n    top: 60px;\r\n    background-color: #D6ECFF;\r\n    border-radius: 10px;\r\n    border: 1px solid #BBB;\r\n  }\r\n\r\n  .chat {\r\n    width: 200px;\r\n    height: 200px;\r\n    background-color: #fff;\r\n    border-radius: 10px;\r\n  }\r\n\r\n  .rightBottom {\r\n    display: flex;\r\n    position: absolute;\r\n    left: 200px;\r\n    bottom: 45px;\r\n    align-items: center;\r\n  }\r\n\r\n  .rightBottom textarea {\r\n    width: 700px;\r\n    height: 70px;\r\n    outline: none;\r\n    resize: none;\r\n    padding: 10px;\r\n    font-size: 15px;\r\n    border-radius: 10px;\r\n  }\r\n\r\n  .rightBottom .icon-fasong {\r\n    font-size: 30px;\r\n    margin-left: 10px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .right .information {\r\n    display: flex;\r\n    position: absolute;\r\n    width: 400px;\r\n    height: 30px;\r\n    left: 480px;\r\n    bottom: 5px;\r\n    font-weight: 700;\r\n    font-size: 14px;\r\n  }\r\n\r\n  .right .contactUs {\r\n    margin-right: 40px;\r\n  }\r\n\r\n  .right .contactUs:hover {\r\n    color: #1990FF;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .right .userMustKnow {\r\n    margin-left: 20px;\r\n  }\r\n\r\n  .right .userMustKnow:hover {\r\n    color: #1990FF;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .advertisement {\r\n    position: absolute;\r\n    width: 800px;\r\n    height: 500px;\r\n    left: 400px;\r\n    top: 120px;\r\n    z-index: 1005;\r\n  }\r\n\r\n  .advertisement img {\r\n    width: 800px;\r\n    height: 500px;\r\n  }\r\n\r\n  .advertisement .closeAdv {\r\n    position: absolute;\r\n    right: 10px;\r\n    top: 10px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .contactUsShow {\r\n    position: relative;\r\n    width: 500px;\r\n    height: 200px;\r\n    background-color: #F6FBFF;\r\n    border: 3px solid #000;\r\n    text-align: center;\r\n    top: 200px;\r\n    left: 260px;\r\n    border-radius: 15px;\r\n    z-index: 1120;\r\n  }\r\n\r\n  .contactUsShow .contactTitle {\r\n    font-weight: 700;\r\n    font-size: 20px;\r\n    margin-top: 10px;\r\n    padding-bottom: 10px;\r\n    border-bottom: 1px solid #BBBBBB;\r\n  }\r\n\r\n  .contactUsShow .contactContent {\r\n    font-size: 25px;\r\n    margin-top: 30px;\r\n  }\r\n\r\n  .contactUsShow .close {\r\n    position: absolute;\r\n    top: 2px;\r\n    left: 460px;\r\n    font-size: 20px;\r\n  }\r\n\r\n  .userMustKnowShow {\r\n    position: relative;\r\n    width: 700px;\r\n    height: 300px;\r\n    background-color: #F6FBFF;\r\n    border: 3px solid #000;\r\n    text-align: center;\r\n    top: 150px;\r\n    left: 200px;\r\n    border-radius: 15px;\r\n    z-index: 1120;\r\n  }\r\n\r\n  .userMustKnowShow .userKnowtTitle {\r\n    font-weight: 700;\r\n    font-size: 20px;\r\n    margin-top: 10px;\r\n    padding-bottom: 10px;\r\n    border-bottom: 1px solid #BBBBBB;\r\n  }\r\n\r\n  .userMustKnowShow .userKnowContent {\r\n    overflow: auto;\r\n    width: 700px;\r\n    height: 240px;\r\n    font-size: 16px;\r\n    margin-top: 5px;\r\n  }\r\n\r\n  .userMustKnowShow .close {\r\n    position: absolute;\r\n    top: 2px;\r\n    left: 660px;\r\n    font-size: 20px;\r\n  }\r\n\r\n  .container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    z-index: 10;\r\n  }\r\n\r\n  .message {\r\n    background-color: #f1f1f1;\r\n    padding: 10px;\r\n    margin: 5px;\r\n    max-width: 70%;\r\n    overflow-wrap: break-word;\r\n  }\r\n\r\n  .message:nth-child(even) {\r\n    align-self: flex-start;\r\n  }\r\n\r\n  .message:nth-child(odd) {\r\n    align-self: flex-end;\r\n  }\r\n\r\n  .disable {\r\n    pointer-events: none;\r\n    opacity: 0.5;\r\n  }\r\n\r\n  .changeGroup {\r\n    position: absolute;\r\n    width: 220px;\r\n    height: 600px;\r\n    left: 436px;\r\n    top: 50px;\r\n    background-color: #F6FBFF;\r\n    border: 1px solid #BBBBBB;\r\n    border-radius: 0 0 10px 0;\r\n    overflow: auto;\r\n  }\r\n\r\n  .changeTop {\r\n    position: absolute;\r\n    width: 220px;\r\n    height: 50px;\r\n    left: 436px;\r\n    text-align: center;\r\n    line-height: 50px;\r\n    font-weight: 700;\r\n    background-color: #F6FBFF;\r\n    border-radius: 0 10px 0 0;\r\n    border-right: 1px solid #BBBBBB;\r\n    border-top: 1px solid #BBBBBB;\r\n  }\r\n\r\n  .close {\r\n    position: absolute;\r\n    left: 630px;\r\n    top: 2px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .changeGroup .group {\r\n    width: 200px;\r\n    height: 40px;\r\n    border-bottom: 1px solid #BBB;\r\n    text-align: center;\r\n    line-height: 40px;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  .changeGroup .group:hover {\r\n    border: 1px solid #1990FF;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .right .overlay {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: rgba(0,0,0,0.5);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    z-index: 1000;\r\n  }\r\n\r\n  .right .setGroupName {\r\n    position: absolute;\r\n    width: 300px;\r\n    height: 120px;\r\n    background-color: #F6FBFF;\r\n    border: 3px solid #000;\r\n    text-align: center;\r\n    border-radius: 10px;\r\n    top: 250px;\r\n    left: 110px;\r\n  }\r\n\r\n  .setGroupName .chessCancel {\r\n    position: absolute;\r\n    width: 200px;\r\n    height: 30px;\r\n    left: 70px;\r\n    bottom: 10px;\r\n  }\r\n\r\n  .setGroupName input {\r\n    width: 240px;\r\n    height: 30px;\r\n    margin-top: 10px;\r\n  }\r\n\r\n  .chessCancel button {\r\n    width: 40px;\r\n    height: 25px;\r\n    background-color: #fff;\r\n    border-radius: 5px;\r\n    margin-right: 40px;\r\n  }\r\n\r\n  .chessCancel button:hover {\r\n    opacity: 0.6;\r\n    cursor: pointer;\r\n  }\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}