{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'ChangePassword',\n  data() {\n    return {\n      noModify: true,\n      user_id: this.$route.query.user_id,\n      old_password: '',\n      new_password: '',\n      new_password2: '',\n      validPassword: true,\n      // 判断密码格式是否符合规范\n      isVip: false,\n      // true为VIP\n      is_limit: false // true表示该用户目前处于被限制登录状态\n    };\n  },\n\n  async created() {\n    document.title = '修改密码-chataaa';\n    const res = await axios.get('http://8.134.178.190:5000/user/get_vip_state', {\n      params: {\n        user_id: this.user_id\n      }\n    });\n    if (res.data.code === '400') {\n      alert('获取vip身份失败');\n      return;\n    }\n    this.isVip = res.data.state;\n    const res2 = await axios.get('http://8.134.178.190:5000/user/is_limit_login', {\n      params: {\n        user_id: this.user_id\n      }\n    });\n    if (res2.data.code === '400') {\n      alert('信息获取失败');\n      return;\n    }\n    this.is_limit = res2.data.is_limit;\n    if (this.is_limit === true) {\n      alert('您已被限制登录');\n      this.exit();\n    }\n  },\n  methods: {\n    checkPassword() {\n      const regex = /^(?=.*[a-zA-Z])(?=.*\\d)(?!.*\\s).{10,12}$/;\n      this.validPassword = regex.test(this.new_password);\n    },\n    async chess() {\n      this.checkPassword();\n      if (this.old_password.trim() === '') {\n        alert(`请输入原密码`);\n        return;\n      } else if (this.new_password.trim() === '') {\n        alert(`请输入新密码`);\n        return;\n      } else if (this.validPassword === false) {\n        alert(`输入密码格式有误`);\n      } else if (this.new_password2.trim() === '') {\n        alert(`请再次输入新密码确认`);\n        return;\n      } else if (this.new_password !== this.new_password2) {\n        alert(`两次密码输入不一致`);\n        return;\n      }\n      const res = await axios.post('http://8.134.178.190:5000/user/information/change', {\n        user_id: this.user_id,\n        old_password: this.old_password,\n        new_password: this.new_password\n      });\n      if (res.data.code === '400') {\n        alert('操作失败');\n        return;\n      }\n      if (res.data.code === '200') {\n        alert(`密码修改成功`);\n        // this.$router.push({\n        //   path: '/setting',\n        //   query: {\n        //     user_id: this.user_id\n        //   }\n        // })\n      } else if (res.data.code === '400') {\n        alert(`修改失败`);\n        return;\n      } else if (res.data.code === '401') {\n        alert(`原密码输入错误`);\n        return;\n      }\n    },\n    setting() {\n      this.$router.push({\n        path: '/setting',\n        query: {\n          user_id: this.user_id\n        }\n      });\n    },\n    toChat() {\n      this.$router.push({\n        path: '/chatInterface',\n        query: {\n          user_id: this.user_id\n        }\n      });\n    },\n    manageRoles() {\n      if (this.isVip) {\n        this.$router.push({\n          path: '/ManageRoles',\n          query: {\n            user_id: this.user_id\n          }\n        });\n      } else {\n        alert('该功能为VIP用户专享，快去升级会员吧！');\n      }\n    },\n    createRoles() {\n      if (this.isVip) {\n        this.$router.push({\n          path: '/createRoles',\n          query: {\n            user_id: this.user_id\n          }\n        });\n      } else {\n        alert('该功能为VIP用户专享，快去升级会员吧！');\n      }\n    },\n    toFeedback() {\n      this.$router.push({\n        path: '/feedback',\n        query: {\n          user_id: this.user_id\n        }\n      });\n    },\n    async exit() {\n      const res = await axios.post('http://8.134.178.190:5000/login_system/log_out', {\n        user_id: this.user_id\n      });\n      if (res.data.code === '400') {\n        this.$message.error('退出登录失败');\n        return;\n      }\n      this.cookie.clearCookie('remember_token');\n      this.cookie.clearCookie('session');\n      this.cookie.clearCookie('user_id');\n      this.$router.push('/login_system');\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","noModify","user_id","$route","query","old_password","new_password","new_password2","validPassword","isVip","is_limit","created","document","title","res","get","params","code","alert","state","res2","exit","methods","checkPassword","regex","test","chess","trim","post","setting","$router","push","path","toChat","manageRoles","createRoles","toFeedback","$message","error","cookie","clearCookie"],"sources":["src/views/ChangePsd.vue"],"sourcesContent":["<template>\r\n  <div class=\"wrapped\">\r\n    <div class=\"left\">\r\n      <ul class=\"leftText\">\r\n        <li @click=\"toChat()\" class=\"one\">聊天框</li>\r\n        <li @click=\"manageRoles()\" class=\"two\">角色管理</li>\r\n        <li @click=\"createRoles()\" class=\"three\">新建角色</li>\r\n        <li @click=\"setting()\" class=\"four\">设置</li>\r\n        <li class=\"five\" @click=\"exit()\">退出登录</li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"middle\">\r\n      <div class=\"middleSetting\">设置</div>\r\n      <div @click=\"setting()\" class=\"settingTop\">个人信息</div>\r\n      <div class=\"settingTop active\">修改密码</div>\r\n      <div @click=\"toFeedback()\" class=\"settingTop\">提交反馈</div>\r\n      <!-- <div class=\"back\">返回</div> -->\r\n    </div>\r\n    <div class=\"right\">\r\n      <div class=\"rightLeft\">ChatAAA</div>\r\n      <div class=\"rightRight\">\r\n        <h3>修改密码</h3>\r\n        <input v-model=\"old_password\" class=\"inp inp1\" type=\"password\" placeholder=\"请输入原密码\">\r\n        <input v-model=\"new_password\" class=\"inp inp2\" type=\"password\" placeholder=\"请输入新密码10-12位，需包含字母和数字，不能有空格\">\r\n        <input v-model=\"new_password2\" class=\"inp inp3\" type=\"password\" placeholder=\"请再次输入新密码\">\r\n        <div @click=\"chess()\" class=\"chess\">确认</div>\r\n        <div @click=\"$router.back()\" class=\"back\">返回</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nexport default {\r\n  name: 'ChangePassword',\r\n  data () {\r\n    return {\r\n      noModify: true,\r\n      user_id: this.$route.query.user_id,\r\n      old_password: '',\r\n      new_password: '',\r\n      new_password2: '',\r\n      validPassword: true, // 判断密码格式是否符合规范\r\n      isVip: false, // true为VIP\r\n      is_limit: false, // true表示该用户目前处于被限制登录状态\r\n    }\r\n  },\r\n\r\n  async created () {\r\n    document.title = '修改密码-chataaa'\r\n    const res = await axios.get('http://8.134.178.190:5000/user/get_vip_state', {\r\n      params: {\r\n        user_id: this.user_id\r\n      }\r\n    })\r\n    if (res.data.code === '400') {\r\n      alert('获取vip身份失败')\r\n      return\r\n    }\r\n    this.isVip = res.data.state\r\n\r\n    const res2 = await axios.get('http://8.134.178.190:5000/user/is_limit_login', {\r\n        params: {\r\n          user_id: this.user_id\r\n        }\r\n      })\r\n      if (res2.data.code === '400') {\r\n        alert('信息获取失败')\r\n        return\r\n      }\r\n      this.is_limit = res2.data.is_limit\r\n      if (this.is_limit === true) {\r\n        alert('您已被限制登录')\r\n        this.exit()\r\n      }\r\n  },\r\n  \r\n\r\n  methods: {\r\n    checkPassword() {\r\n      const regex = /^(?=.*[a-zA-Z])(?=.*\\d)(?!.*\\s).{10,12}$/;\r\n      this.validPassword = regex.test(this.new_password);\r\n    },\r\n    async chess () {\r\n      this.checkPassword()\r\n      if (this.old_password.trim() === '') {\r\n        alert(`请输入原密码`)\r\n        return\r\n      } else if (this.new_password.trim() === '') {\r\n        alert(`请输入新密码`)\r\n        return\r\n      } else if (this.validPassword === false) {\r\n        alert(`输入密码格式有误`)\r\n      }else if (this.new_password2.trim() === '') {\r\n        alert(`请再次输入新密码确认`)\r\n        return\r\n      } else if (this.new_password !== this.new_password2) {\r\n        alert(`两次密码输入不一致`)\r\n        return\r\n      } \r\n\r\n      const res = await axios.post('http://8.134.178.190:5000/user/information/change', {\r\n        user_id: this.user_id,\r\n        old_password: this.old_password,\r\n        new_password: this.new_password\r\n      })\r\n      if (res.data.code === '400') {\r\n        alert('操作失败')\r\n        return\r\n      }\r\n      if (res.data.code === '200') {\r\n        alert(`密码修改成功`)\r\n        // this.$router.push({\r\n        //   path: '/setting',\r\n        //   query: {\r\n        //     user_id: this.user_id\r\n        //   }\r\n        // })\r\n      } else if (res.data.code === '400') {\r\n        alert(`修改失败`)\r\n        return\r\n      } else if (res.data.code === '401') {\r\n        alert(`原密码输入错误`)\r\n        return\r\n      }\r\n    },\r\n    setting() {\r\n      this.$router.push({\r\n        path: '/setting',\r\n        query: {\r\n          user_id: this.user_id\r\n        }\r\n      })\r\n    },\r\n    toChat () {\r\n      this.$router.push({\r\n        path: '/chatInterface',\r\n        query: {\r\n          user_id: this.user_id\r\n        }\r\n      })\r\n    },\r\n    manageRoles() {\r\n      if(this.isVip) {\r\n        this.$router.push({\r\n          path: '/ManageRoles',\r\n          query: {\r\n            user_id: this.user_id\r\n          }\r\n        })\r\n      } else {\r\n        alert('该功能为VIP用户专享，快去升级会员吧！')\r\n      }\r\n    },\r\n    createRoles () {\r\n      if (this.isVip) {\r\n        this.$router.push({\r\n          path: '/createRoles',\r\n          query: {\r\n            user_id: this.user_id\r\n          }\r\n        })\r\n      } else {\r\n        alert('该功能为VIP用户专享，快去升级会员吧！')\r\n      }\r\n    },\r\n    toFeedback () {\r\n      this.$router.push({\r\n        path: '/feedback',\r\n        query: {\r\n          user_id: this.user_id\r\n        }\r\n      })\r\n    },\r\n    async exit () {\r\n      const res = await axios.post('http://8.134.178.190:5000/login_system/log_out', {\r\n        user_id: this.user_id\r\n      })\r\n      if (res.data.code === '400') {\r\n        this.$message.error('退出登录失败');\r\n        return\r\n      }\r\n      this.cookie.clearCookie('remember_token')\r\n      this.cookie.clearCookie('session')\r\n      this.cookie.clearCookie('user_id')\r\n      this.$router.push('/login_system')\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n  .wrapped {\r\n    display: flex;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #465069;\r\n    opacity: 0.9;\r\n  }\r\n\r\n  .left {\r\n    width: 90px;\r\n    height: 100%;\r\n    background-color: #D6ECFF;\r\n    border-radius: 10px 0 0 10px;\r\n  }\r\n\r\n  .leftText {\r\n    position: relative;\r\n    color: #9CBFFB;\r\n    font-weight: 700;\r\n    font-size: 18px;\r\n    text-align: center;\r\n  }\r\n\r\n  .leftText li {\r\n    width: 90px;\r\n    height: 50px;\r\n    line-height: 50px;\r\n    border: 2px solid #9CBFFB;\r\n    border-radius: 10px;\r\n  }\r\n\r\n  .leftText li:hover {\r\n    background-color: #a0bff5;\r\n    color: #1990FF;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .leftText .one {\r\n    position: absolute;\r\n    top: 90px;\r\n  }\r\n\r\n  .leftText .two {\r\n    position: absolute;\r\n    top: 210px;\r\n  }\r\n\r\n  .leftText .three {\r\n    position: absolute;\r\n    top: 330px;\r\n  }\r\n\r\n  .leftText .four {\r\n    position: absolute;\r\n    top: 450px;\r\n    color: #1990FF;\r\n  }\r\n\r\n  .leftText .five {\r\n    position: absolute;\r\n    top: 570px;\r\n  }\r\n\r\n  .middle {\r\n    position: relative;\r\n    width: 200px;\r\n    background-color: #F6FBFF;\r\n    border: 1px solid #BBBBBB;\r\n    font-size: 17px;\r\n  }\r\n\r\n  .middleSetting {\r\n    padding: 5px 0 10px 20px;\r\n    font-size: 20px;\r\n  }\r\n\r\n  .settingTop {\r\n    text-align: center;\r\n    padding-bottom: 12px;\r\n  }\r\n\r\n  .settingTop:hover {\r\n    color: #1990FF;\r\n    font-weight: 700;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .active {\r\n    color: #1990FF;\r\n    font-weight: 700;\r\n  }\r\n\r\n  .middle .back {\r\n    width: 120px;\r\n    position: absolute;\r\n    height: 50px;\r\n    /* background-color: pink; */\r\n    text-align: center;\r\n    line-height: 50px;\r\n    bottom: 10px;\r\n    left: 40px;\r\n    border-radius: 6px;\r\n    border: 2px solid #D6ECFF;\r\n  }\r\n\r\n  .back:hover {\r\n    background-color: #D6ECFF;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .right {\r\n    display: flex;\r\n    width: 1250px;\r\n    background-color: #D2D7EF;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n\r\n  .rightLeft {\r\n    width: 400px;\r\n    height: 400px;\r\n    background-color: #7F88BB;\r\n    border-radius: 10px 0 0 10px;\r\n    font-size: 60px;\r\n    text-align: center;\r\n    line-height: 400px;\r\n    color: #93D2F3;\r\n    font-weight: 700;\r\n  }\r\n\r\n  .rightRight {\r\n    position: relative;\r\n    width: 400px;\r\n    height: 400px;\r\n    background-color: #fff;\r\n    border-radius: 0 10px 10px 0;\r\n    text-align: center;\r\n  }\r\n\r\n  .right h3 {\r\n    text-align: center;\r\n    padding: 27px 40px 70px 40px;\r\n    color: #3A62D7;\r\n    font-size: 30px;\r\n  }\r\n\r\n  .right .inp {\r\n    width: 350px;\r\n    height: 40px;\r\n    border: 1px solid #BBBBBB;\r\n    border-radius: 15px;\r\n    padding: 10px;\r\n  }\r\n\r\n  .right .inp1 {\r\n    position: absolute;\r\n    left: 30px;\r\n    top: 100px;\r\n  }\r\n\r\n  .right .inp2 {\r\n    position: absolute;\r\n    left: 30px;\r\n    top: 150px;\r\n  }\r\n\r\n  .right .inp3 {\r\n    position: absolute;\r\n    left: 30px;\r\n    top: 200px;\r\n  }\r\n  \r\n  .right .chess {\r\n    position: absolute;\r\n    display: block;\r\n    width: 300px;\r\n    height: 45px;\r\n    background-color: #3291F8;\r\n    text-align: center;\r\n    line-height: 45px;\r\n    color: #fff;\r\n    font-size: 16px;\r\n    margin: 0 auto;\r\n    top: 260px;\r\n    left: 50px;\r\n    border-radius: 15px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .right .back {\r\n    position: absolute;\r\n    display: block;\r\n    width: 300px;\r\n    height: 45px;\r\n    background-color: #3291F8;\r\n    text-align: center;\r\n    line-height: 45px;\r\n    color: #fff;\r\n    font-size: 16px;\r\n    margin: 0 auto;\r\n    top: 325px;\r\n    left: 50px;\r\n    border-radius: 15px;\r\n    cursor: pointer;\r\n  }\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}